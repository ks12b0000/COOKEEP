# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend
    steps:
    - uses: actions/checkout@v3
    - run: npm ci
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Set Yaml
      uses: microsoft/variable-substitution@v1
      with:
        files: ./backend/src/main/resources/application-prod.yml 
      env:
        spring.datasource.url: ${{ secrets.DB_URL }} 
        spring.datasource.username: ${{ secrets.DB_USERNAME }} 
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        spring.mail.username: ${{secrets.MASTER_EMAIL}}
        spring.mail.password: ${{secrets.MASTER_EMAIL_PW}}
        cloud.aws.credentials.accessKey: ${{secrets.S3_ACCESSKEY}}
        cloud.aws.credentials.secretKey: ${{secrets.S3_SECRETKEY}}
        cloud.aws.s3.bucket: ${{secrets.S3_BUCKET}}
        KAKAO_API_KEY: ${{secrets.KAKAO_API_KEY}}
        NAVER_API_ID: ${{secrets.NAVER_API_ID}}
        NAVER_API_SECRET: ${{secrets.NAVER_API_SECRET}}
        GOOGLE_API_ID: ${{secrets.GOOGLE_API_ID}}
        GOOGLE_API_SECRET: ${{secrets.GOOGLE_API_SECRET}}
        JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
    - name: Create env file
      env:
        REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
        REACT_APP_KAKAO_REST_KEY: ${{ secrets.REACT_APP_KAKAO_REST_KEY }}
        REACT_APP_GOOGLE_REST_KEY: ${{ secrets.REACT_APP_GOOGLE_REST_KEY }}
        REACT_APP_NAVER_REST_KEY: ${{ secrets.REACT_APP_NAVER_REST_KEY }}
      run: |
        touch .env.production
        echo REACT_APP_API_BASE_URL="$REACT_APP_API_BASE_URL" >> .env.production
        echo REACT_APP_KAKAO_REST_KEY="$REACT_APP_KAKAO_REST_KEY" >> .env.production
        echo REACT_APP_GOOGLE_REST_KEY="$REACT_APP_GOOGLE_REST_KEY" >> .env.production
        echo REACT_APP_NAVER_REST_KEY="$REACT_APP_NAVER_REST_KEY" >> .env.production
        cat .env.production | head -n 1
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ${{ env.working-directory }}
#     - name: Build with Gradle
#       uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1 # 수정해야함
#       env:
#         working-directory: ./backend
#       with:
#         arguments: build
    - name: Docker build 
      run: |
       docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
       docker build -t spring-cicd .
       docker tag spring-cicd ks12b0000/spring-cicd:latest
       docker push ks12b0000/spring-cicd:latest
      working-directory: ${{ env.working-directory }}
  deploy:
    needs: build  # build 후에 실행되도록 정의
    name: Deploy
    runs-on: [ self-hosted, label-go ] # AWS ./configure에서 사용할 label명
    steps:
      # 3000 -> 80 포트로 수행하도록 지정
      - name: Docker run
        run: |
          docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
          docker stop spring-cicd && docker rm spring-cicd && docker rmi ks12b0000/spring-cicd:latest
          docker run -d -p 8080:8080 --name spring-cicd --restart always ks12b0000/spring-cicd:latest
